{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "New Test Child Api",
    "version" : "v4",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "sales" : "FREE",
      "service" : "FREE",
      "cms" : "FREE"
    },
    "x-hubspot-documentation-banner" : "NONE"
  },
  "servers" : [ {
    "url" : "https://api.hubapiqa.com"
  } ],
  "tags" : [ {
    "name" : "Blogs"
  }, {
    "name" : "Batch"
  }, {
    "name" : "Definitions"
  } ],
  "paths" : {
    "/cms/v3/blog-settings/settings/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Blogs" ],
        "summary" : "Update languages of multi-language group",
        "description" : "Explicitly set new languages for each blog in a multi-language group.",
        "operationId" : "post-/cms/v3/blog-settings/settings/multi-language/update-languages",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the UpdateLanguagesRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/{blogId}/revisions" : {
      "get" : {
        "tags" : [ "Blogs" ],
        "summary" : "Retrieves all the previous versions of a Blog",
        "description" : "Retrieves all the previous versions of a Blog",
        "operationId" : "get-/cms/v3/blog-settings/settings/{blogId}/revisions",
        "parameters" : [ {
          "name" : "blogId",
          "in" : "path",
          "description" : "The Blog id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalVersionBlog"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/{blogId}/revisions/{revisionId}" : {
      "get" : {
        "tags" : [ "Blogs" ],
        "summary" : "Retrieves a previous version of a Blog",
        "description" : "Retrieves a previous version of a Blog",
        "operationId" : "get-/cms/v3/blog-settings/settings/{blogId}/revisions/{revisionId}",
        "parameters" : [ {
          "name" : "blogId",
          "in" : "path",
          "description" : "The Blog id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Blog version id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBlog"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/{blogId}" : {
      "get" : {
        "tags" : [ "Blogs" ],
        "summary" : "Retrieve a Blog",
        "description" : "Retrieve the Blog object identified by the id in the path.",
        "operationId" : "get-/cms/v3/blog-settings/settings/{blogId}",
        "parameters" : [ {
          "name" : "blogId",
          "in" : "path",
          "description" : "The Blog id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Blog"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Blogs" ],
        "summary" : "Create a new language variation",
        "description" : "Create a new language variation from an existing blog",
        "operationId" : "post-/cms/v3/blog-settings/settings/multi-language/create-language-variation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentLanguageCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogLanguageCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Blog"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Blogs" ],
        "summary" : "Set a new primary language",
        "description" : "Set a blog as the primary language of a multi-language group.",
        "operationId" : "put-/cms/v3/blog-settings/settings/multi-language/set-new-lang-primary",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Blogs" ],
        "summary" : "Detach a blog from a multi-language group",
        "description" : "Detach a blog from a multi-language group.",
        "operationId" : "post-/cms/v3/blog-settings/settings/multi-language/detach-from-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blog-settings/settings/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Blogs" ],
        "summary" : "Attach a blog to a multi-language group",
        "description" : "Attach a blog to a multi-language group.",
        "operationId" : "post-/cms/v3/blog-settings/settings/multi-language/attach-to-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Delete",
        "description" : "Batch delete associations for objects",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/archive",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicAssociationMultiArchive"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create",
        "description" : "Batch create associations for objects",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/create",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicAssociationMultiPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseLabelsBetweenObjectPair"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseLabelsBetweenObjectPairWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/labels" : {
      "get" : {
        "tags" : [ "Definitions" ],
        "summary" : "Read",
        "description" : "Returns all association types between two object types",
        "operationId" : "get-/crm/v4/associations/{fromObjectType}/{toObjectType}/labels",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseAssociationSpecWithLabelNoPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Definitions" ],
        "summary" : "Update",
        "description" : "Update a user defined association definition",
        "operationId" : "put-/crm/v4/associations/{fromObjectType}/{toObjectType}/labels",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicAssociationDefinitionUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Definitions" ],
        "summary" : "Create",
        "description" : "Create a user defined association definition",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/labels",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicAssociationDefinitionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseAssociationSpecWithLabelNoPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/labels/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Delete Specific Labels",
        "description" : "Batch delete specific association labels for objects. Deleting an unlabeled association will also delete all labeled associations between those two objects",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/labels/archive",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicAssociationMultiPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Read",
        "description" : "Batch read associations for objects to specific object type. The 'after' field in a returned paging object  can be added alongside the 'id' to retrieve the next page of associations from that objectId. The 'link' field is deprecated and should be ignored. ",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/read",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicFetchAssociationsBatchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociationMultiWithLabel"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociationMultiWithLabelWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/labels/{associationTypeId}" : {
      "delete" : {
        "tags" : [ "Definitions" ],
        "summary" : "Delete",
        "description" : "Deletes an association definition",
        "operationId" : "delete-/crm/v4/associations/{fromObjectType}/{toObjectType}/labels/{associationTypeId}",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associationTypeId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    },
    "/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/associate/default" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : " Create Default Associations",
        "description" : "Create the default (most generic) association type between two object types",
        "operationId" : "post-/crm/v4/associations/{fromObjectType}/{toObjectType}/batch/associate/default",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicDefaultAssociationMultiPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicDefaultAssociation"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "private_apps_legacy" : [ "contacts" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.goals.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps_legacy" : [ "e-commerce" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "private_apps" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "private_apps_legacy" : [ "tickets" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.goals.read" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "private_apps" : [ "crm.objects.quotes.read" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "UpdateLanguagesRequestVNext" : {
        "required" : [ "languages", "primaryId" ],
        "type" : "object",
        "properties" : {
          "languages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Map of object IDs to associated languages of object in the multi-language group."
          },
          "primaryId" : {
            "type" : "string",
            "description" : "ID of the primary object in the multi-language group."
          }
        },
        "description" : "Request object for updating languages within a multi-language group."
      },
      "LabelsBetweenObjectPair" : {
        "required" : [ "fromObjectId", "fromObjectTypeId", "labels", "toObjectId", "toObjectTypeId" ],
        "type" : "object",
        "properties" : {
          "fromObjectTypeId" : {
            "type" : "string"
          },
          "toObjectId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "toObjectTypeId" : {
            "type" : "string"
          },
          "fromObjectId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SetNewLanguagePrimaryRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of object to set as primary in multi-language group."
          }
        },
        "description" : "Request body object for setting a new primary language."
      },
      "Paging_1" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage_1"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage_1"
          }
        }
      },
      "DetachFromLangGroupRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the object to remove from a multi-language group."
          }
        },
        "description" : "Request body object for detaching objects from multi-language groups."
      },
      "PublicAssociationMultiWithLabel" : {
        "required" : [ "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging_1"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MultiAssociatedObjectWithLabel"
            }
          }
        }
      },
      "BatchInputPublicDefaultAssociationMultiPost" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicDefaultAssociationMultiPost"
            }
          }
        }
      },
      "BatchInputPublicAssociationMultiArchive" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationMultiArchive"
            }
          }
        }
      },
      "MultiAssociatedObjectWithLabel" : {
        "required" : [ "associationTypes", "toObjectId" ],
        "type" : "object",
        "properties" : {
          "associationTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpecWithLabel"
            }
          },
          "toObjectId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PublicAssociationDefinitionUpdateRequest" : {
        "required" : [ "associationTypeId", "label" ],
        "type" : "object",
        "properties" : {
          "associationTypeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "AttachToLangPrimaryRequestVNext" : {
        "required" : [ "id", "language", "primaryId" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "description" : "Designated language of the object to add to a multi-language group.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the object to add to a multi-language group."
          },
          "primaryId" : {
            "type" : "string",
            "description" : "ID of primary language object in multi-language group."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "Primary language of the multi-language group."
          }
        },
        "description" : "Request body object for attaching objects to multi-language groups."
      },
      "VersionBlog" : {
        "required" : [ "id", "object", "updatedAt", "user" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the version."
          },
          "user" : {
            "$ref" : "#/components/schemas/VersionUser"
          },
          "object" : {
            "$ref" : "#/components/schemas/Blog"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a Version Blog. Contains metadata describing the version of the Blog. It can be used to view edit history of the settings."
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "AssociationSpecWithLabel" : {
        "required" : [ "category", "typeId" ],
        "type" : "object",
        "properties" : {
          "typeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          }
        }
      },
      "BlogLanguageCloneRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "description" : "Target language of new variant."
          },
          "id" : {
            "type" : "string",
            "description" : "ID of blog to clone."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "Language of primary blog to clone."
          },
          "slug" : {
            "type" : "string",
            "description" : "Path to this blog."
          }
        },
        "description" : "Request body object for creating new language variant blog."
      },
      "BatchResponseLabelsBetweenObjectPair" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LabelsBetweenObjectPair"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PublicAssociationMultiPost" : {
        "required" : [ "from", "to", "types" ],
        "type" : "object",
        "properties" : {
          "types" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpec"
            }
          },
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          }
        }
      },
      "Blog" : {
        "required" : [ "absoluteUrl", "allowComments", "created", "deletedAt", "description", "htmlTitle", "id", "language", "name", "publicAccessRules", "publicAccessRulesEnabled", "publicTitle", "slug", "translatedFromId", "updated" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "absoluteUrl" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "description" : "The Description of this Blog."
          },
          "language" : {
            "type" : "string",
            "description" : "The explicitly defined language of the Blog. If null, the Blog will default to the language of the Domain.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "translatedFromId" : {
            "type" : "string",
            "description" : "ID of the primary Blog this object was translated from."
          },
          "publicAccessRules" : {
            "type" : "array",
            "description" : "Rules for require member registration to access private content.",
            "items" : {
              "$ref" : "#/components/schemas/PublicAccessRule"
            }
          },
          "publicTitle" : {
            "type" : "string",
            "description" : "The public title of this Blog."
          },
          "allowComments" : {
            "type" : "boolean",
            "description" : "Boolean determining whether or not this blog allows public comments."
          },
          "deletedAt" : {
            "type" : "string",
            "description" : "The timestamp (ISO8601 format) when this Blog was deleted.",
            "format" : "date-time"
          },
          "htmlTitle" : {
            "type" : "string",
            "description" : "The html title of this Blog."
          },
          "publicAccessRulesEnabled" : {
            "type" : "boolean",
            "description" : "Boolean to determine whether or not to respect publicAccessRules."
          },
          "name" : {
            "type" : "string",
            "description" : "The internal name of the blog."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the Blog."
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "slug" : {
            "type" : "string",
            "description" : "The path of the this blog. This field is appended to the domain to construct the url of this blog."
          }
        }
      },
      "VersionUser" : {
        "required" : [ "email", "fullName", "id" ],
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "description" : "The first and last name of the User."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the User."
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the user."
          }
        },
        "description" : "Model definition for a VersionUser. Contains addition information about the user who created a version."
      },
      "PublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "PublicAssociationDefinitionCreateRequest" : {
        "required" : [ "label", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "BatchResponsePublicAssociationMultiWithLabelWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationMultiWithLabel"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PublicAssociationMultiArchive" : {
        "required" : [ "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicObjectId"
            }
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        },
        "description" : "Model definition for paging."
      },
      "PublicDefaultAssociation" : {
        "required" : [ "associationSpec", "from", "to" ],
        "type" : "object",
        "properties" : {
          "associationSpec" : {
            "$ref" : "#/components/schemas/AssociationSpec"
          },
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "BatchInputPublicAssociationMultiPost" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationMultiPost"
            }
          }
        }
      },
      "PreviousPage_1" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "PublicDefaultAssociationMultiPost" : {
        "required" : [ "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          }
        }
      },
      "BatchInputPublicFetchAssociationsBatchRequest" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicFetchAssociationsBatchRequest"
            }
          }
        }
      },
      "BatchResponsePublicAssociationMultiWithLabel" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationMultiWithLabel"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "BatchResponsePublicDefaultAssociation" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicDefaultAssociation"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PublicAccessRule" : {
        "type" : "object",
        "properties" : { }
      },
      "AssociationSpec" : {
        "required" : [ "associationCategory", "associationTypeId" ],
        "type" : "object",
        "properties" : {
          "associationCategory" : {
            "type" : "string",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          },
          "associationTypeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CollectionResponseAssociationSpecWithLabelNoPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpecWithLabel"
            }
          }
        }
      },
      "BatchResponseLabelsBetweenObjectPairWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LabelsBetweenObjectPair"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        },
        "description" : "Model definition for a previous page"
      },
      "CollectionResponseWithTotalVersionBlog" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of blog versions.",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "description" : "Collection of blog versions.",
            "items" : {
              "$ref" : "#/components/schemas/VersionBlog"
            }
          }
        },
        "description" : "Response object for collections of blog versions with pagination information."
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        },
        "description" : "Model definition for a next page."
      },
      "PublicFetchAssociationsBatchRequest" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      },
      "NextPage_1" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "content" : "Read from and write to my Content"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      },
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.quotes.read" : "Quotes",
              "crm.objects.deals.write" : " ",
              "crm.objects.line_items.read" : "Line Items",
              "crm.objects.deals.read" : " ",
              "crm.objects.quotes.write" : "Quotes",
              "crm.objects.contacts.read" : " ",
              "crm.objects.contacts.write" : " ",
              "crm.objects.companies.write" : " ",
              "crm.objects.companies.read" : " ",
              "crm.objects.line_items.write" : "Line Items"
            }
          }
        }
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      },
      "oauth2_legacy_1" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.goals.write" : "Write goals",
              "tickets" : "Read and write tickets",
              "crm.objects.goals.read" : "Read goals",
              "crm.objects.custom.read" : "View custom object records",
              "crm.objects.custom.write" : "Change custom object records",
              "e-commerce" : "e-commerce"
            }
          }
        }
      }
    }
  }
}